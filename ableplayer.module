<?php

/**
 * @file
 * Module file for Able Player.
 */


use \Drupal\Core\Entity\Display\EntityViewDisplayInterface;

/**
 * Defined constants for the default File Entity video and audio bundles.
 */
define('ABLEPLAYER_BUNDLE_AUDIO', 'audio');
define('ABLEPLAYER_BUNDLE_VIDEO', 'video');

/**
 * Defined constants for the supported mimetypes.
 */
define('ABLEPLAYER_MIME_MPEG', 'mpeg');
define('ABLEPLAYER_MIME_OGG', 'ogg');
define('ABLEPLAYER_MIME_MP4', 'mp4');
define('ABLEPLAYER_MIME_WEBM', 'webm');
define('ABLEPLAYER_MIME_YOUTUBE', 'youtube');

/**
 * Implements hook_page_attachments().
 * This is for testing that libraries are included properly.
 */
function ableplayer_page_attachments(array &$attachments) {
  $attachments['#attached']['library'][] = 'ableplayer/ableplayer';
}

/**
 * Impelements hook_file_default_types_alter().
 */
function ableplayer_file_default_types_alter(&$types) {
  $types['document']->mimetypes[] = 'text/vtt';
}

/**
 * Implements hook_help().
 */
function ableplayer_help($path, $arg) {
  switch ($path) {

    case 'admin/help#ableplayer':

      $filepath = drupal_get_path('module', 'ableplayer') . '/README.md';

      if (is_file($filepath) && is_readable($filepath)) {
        $readme = file_get_contents($filepath);
      }

      if (!isset($readme)) {
        return NULL;
      }

      if (\Drupal::moduleHandler()->moduleExists('markdown')) {
        $filters = \Drupal::moduleHandler()->invoke('markdown', 'filter_info');
        $info = $filters['filter_markdown'];

        if (function_exists($info['process callback'])) {
          $output = $info['process callback']($readme, NULL);
        }
        else {
          $output = '<pre>' . $readme . '</pre>';
        }
      }
      else {
        $output = '<pre>' . $readme . '</pre>';
      }

      return $output;

  }
}

/**
 * Implements hook_menu().
 */
function ableplayer_menu() {
  $items = [];

  $items['admin/config/media/ableplayer'] = [
    'title' => 'Able Player',
    'description' => 'Configuration for Able Player library',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['ableplayer_form'],
    'access arguments' => ['administer site configuration'],
    'type' => MENU_NORMAL_ITEM,
    'file' => 'admin/ableplayer.admin.inc',
  ];

  return $items;
}

/**
 * Implements hook_theme().
 */
function ableplayer_theme(array $existing, $type, $theme, $path) {
  $themes = [];

  $themes['ableplayer'] = [
    'variables' => [
      'id' => NULL,
      'uri' => NULL,
      'mimetype' => NULL,
      'tracks' => [],
      'options' => [],
    ],
    'file' => 'ableplayer.theme.inc',
    'path' => $path . '/themes',
  ];

  $themes['ableplayer_video'] = [
    'variables' => [
      'files' => [],
      'transcript' => [],
      'attributes' => NULL,
    ],
  ];

  $themes['ableplayer_audio'] = [
    'variables' => [
      'files' => [],
      'transcript' => [],
      'attributes' => NULL,
    ],
  ];

  $themes['ableplayer_transcript'] = [
    'variables' => [
      'file' => NULL,
    ],
  ];

  $themes['field__ableplayer_transcript'] = [
    'template' => 'field--ableplayer-transcript',
    'base hook' => 'field',
  ];

  return $themes;
}
