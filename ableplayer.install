<?php

/**
 * @file
 *
 * Install file for Able Player.
 */

/**
 * Implements hook_install().
 */
function ableplayer_install() {
  $field = array(
    'field_name' => 'field_transcript',
    'label' => t('Transcript'),
    'type' => 'file',
    'entity_type' => 'file',
    'bundle' => NULL,
    'required' => FALSE,
    'cardinality' => 1,
    'settings' => array(
      'file_extensions' => 'vtt',
    ),
    'display' => array(
      'label' => 'hidden',
      'type' => 'hidden',
     ),
  );

  $field_info = field_info_field($field['field_name']);

  if (empty($field_info)) {
    field_create_field($field);
  }

  $file_types = file_type_load_all();

  foreach ($file_types as $file_type) {
    if (!in_array($file_type->type, array('audio', 'video', ))) {
      continue;
    }

    $field['bundle'] = $file_type->type;
    $instance_info = field_info_instance($field['entity_type'], $field['field_name'], $field['bundle']);

    if (empty($instance_info)) {
      field_create_instance($field);
    }
  }

  drupal_set_message(st('Able Player settings are available under @link',
    array('@link' => l(st('Administer > Site Configuration > Media > Able Player'), 'admin/config/media/ableplayer'), )
  ));
}

/**
 * Implements hook_requirements().
 */
function ableplayer_requirements($phase) {
  $requirements = array();
  $t = get_t();

  module_load_include('inc', 'ableplayer', 'includes/ableplayer');

  switch ($phase) {

    case 'runtime':
      $status = ableplayer_installation_status();

      if ($status['error']) {
        $value = $t('Not installed');
        $description = $status['message'];
        $severity = REQUIREMENT_ERROR;
      }
      else {
        $value = $status['version'];
        $description = FALSE;
        $severity = REQUIREMENT_OK;
      }

      $requirements['ableplayer']['title'] = $t('Able Player');
      $requirements['ableplayer']['value'] = $value;
      $requirements['ableplayer']['description'] = $description;
      $requirements['ableplayer']['severity'] = $severity;

      break;

  }

  return $requirements;
}

/**
 * Implements hook_uninstall().
 */
function ableplayer_uninstall() {
  variable_del('ableplayer_compression_level');
}
