<?php

/**
 * @file
 * Install file for Able Player.
 */

/**
 * Implements hook_install().
 */
function ableplayer_install() {
  $t = 't';

  $fields = array(
    array(
      'field_name' => 'ableplayer_transcript',
      'label' => $t('Transcript'),
      'type' => 'file',
      'entity_type' => 'file',
      'bundle' => NULL,
      'cardinality' => FIELD_CARDINALITY_UNLIMITED,
      'required' => FALSE,
      'locked' => TRUE,
      'settings' => array(
        'file_extensions' => 'vtt',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
          'settings' => array(),
        ),
      ),
    ),
    array(
      'field_name' => 'ableplayer_description',
      'label' => $t('Description'),
      'type' => 'file',
      'entity_type' => 'file',
      'bundle' => NULL,
      'cardinality' => FIELD_CARDINALITY_UNLIMITED,
      'required' => FALSE,
      'locked' => TRUE,
      'settings' => array(
        'file_extensions' => 'vtt',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
          'settings' => array(),
        ),
      ),
    ),
    array(
      'field_name' => 'ableplayer_chapters',
      'label' => $t('Chapters'),
      'type' => 'file',
      'entity_type' => 'file',
      'bundle' => NULL,
      'cardinality' => FIELD_CARDINALITY_UNLIMITED,
      'required' => FALSE,
      'locked' => TRUE,
      'settings' => array(
        'file_extensions' => 'vtt',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'hidden',
          'settings' => array(),
        ),
      ),
    ),
  );

  // @FIXME
  // $file_types = file_type_load_all();
  $file_types = array();

  foreach ($file_types as $file_type) {
    if (!in_array($file_type->type, array(ABLEPLAYER_BUNDLE_AUDIO, ABLEPLAYER_BUNDLE_VIDEO))) {
      continue;
    }

    foreach ($fields as $field) {
      $field_info = field_info_field($field['field_name']);

      if (empty($field_info)) {
        // @FIXME
        // Fields and field instances are now exportable configuration entities, and
        // the Field Info API has been removed.
        //
        //
        // @see https://www.drupal.org/node/2012896
        // field_create_field($field);
      }

      $field['bundle'] = $file_type->type;
      $instance_info = field_info_instance($field['entity_type'], $field['field_name'], $field['bundle']);

      if (empty($instance_info)) {
        // @FIXME
        // Fields and field instances are now exportable configuration entities, and
        // the Field Info API has been removed.
        //
        //
        // @see https://www.drupal.org/node/2012896
        // field_create_instance($field);
      }
    }
  }

  // @FIXME
  // url() expects a route name or an external URI.
  // drupal_set_message($t("Able Player settings are available under <a href='@link'>Administration > Configuration > Media > Able Player</a>",
  //     array(
  //       '@link' => url('admin/config/media/ableplayer'),
  //     )));
}

/**
 * Implements hook_requirements().
 */
function ableplayer_requirements($phase) {
  module_load_include('inc', 'ableplayer', 'includes/ableplayer');

  $requirements = array();
  $t = 't';

 if ($phase == 'runtime') {

      $requirements['ableplayer']['title'] = $t('Able Player');
      $requirements['ableplayer']['value'] = $value;
      $requirements['ableplayer']['description'] = $description;
      $requirements['ableplayer']['severity'] = $severity;

  }

  return $requirements;
}
